
1)에외 만들 때 다음 두개의 차이를 설명하시오.
```java
class A {
    private String message;
    public A(String message){
        this.message = message;
    }
    public String getMessage(){
        return this.message;
    }
}

class B {
    private String message;
    public B(String message){
        super(message);
    }
    public String getMessage(){
        return this.message;
    }
}

throw new A("hello"); > a.getMessage()?
throw new B("hello"); > b.getMessage()?
```

답: 글로벌 핸들러로 Exception으로 받을 때 A는 a.getMessage()하면 A를 생성할때 파라미터로 지정한 메시지가 노출되지만, B의 경우 b.getMessage()하면 null이 나온다. 본래 getMessage()는 Throwable의 detailMessage라는 필드의 리터럴을 반환하지만  오버라이딩된 getMessage()에서는 상속한 Exception의 getMesage()를 반환하기 때문이다.
따라서 getMessage()를 오버라이딩 할 경우, 필드변수를 불러오고 그 값은 null이므로
super()안에 메시지를 정의해주기 보단, 직접 message를 인스턴스 변수로 만들자.